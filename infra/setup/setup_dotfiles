#! /usr/bin/env bash

# check that DOTFILES variable is defined
# relative path handling is tricky and never foolproof
# refs
#   - http://mywiki.wooledge.org/BashFAQ/028
#   - https://stackoverflow.com/questions/6659689/referring-to-a-file-relative-to-executing-script
# shellcheck disable=SC1090
source "${BASH_SOURCE%/*}/check_dotfiles_variable.sh"

printf '\x1b[38;5;006mstarting dotfiles setup\x1b[0m\n\n'

# symlink config files to their correct locations
# done early so that other installation steps can make use of these files (for
# example, setting up home-manager for the first time in `setup_nix` requires
# `$DOTFILES/nix/home.nix` to be symlinked appropriately)
"$DOTFILES/infra/setup/bin/symlink"

# TODO: test if available for future setup steps
"$DOTFILES/infra/setup/bin/setup_nix" || {
  # shellcheck disable=SC2016
  echo '`nix` installation failed.'
  # shellcheck disable=SC2016
  echo 'Try opening a new shell and rerunning `$DOTFILES/infra/setup/bin/setup_nix`'
  exit 1
}

# set up Homebrew and all packages from `$DOTFILES/Brewfile` &
# `$DOTFILES/misc/macos/Brewfile`
# `source` so that Homebrew is added to PATH for future setup steps (needed for
# Linux setup)
source "$DOTFILES/infra/setup/bin/setup_brew" || {
  echo 'Homebrew installation had at least one failure'
  echo 'This can often be flaky and only prevent use of a package or two'
  echo 'If the error looks more severe you may want to investigate more'
}

# generate user-specific gitconfig (name & email) @ `$HOME/.gitconfig.local`
"$DOTFILES/infra/setup/bin/setup_git_config" "$HOME/.gitconfig.local" --skip-existing

# set up our shell (`zsh`)
# this adds `zsh` to our allowed shells and sets it as the default. Then it
# loads `zsh` for the first time to install plugins & complete setup.
"$DOTFILES/infra/setup/bin/setup_zsh"

# load neovim for the first time to install plugins
"$DOTFILES/infra/setup/bin/setup_neovim"

# set up various pieces too small for their own files
# see the file in question for each piece
"$DOTFILES/infra/setup/bin/setup_bits_and_pieces"

# run after `$DOTFILES/infra/setup/bin/symlink` so that $DOTFILES/utilities/asdf/tool-versions is
# symlinked to `$HOME/.tool-versions`
"$DOTFILES/infra/setup/bin/setup_asdf"

# optionally set up work-specific config (confirms via user prompt)
"$DOTFILES/infra/setup/bin/setup_work"

printf '\n\n\x1b[38;5;006msetup finished! \x1b[0mðŸŽ‰\n'
printf '\x1b[38;5;006mstarting new shell, happy coding\x1b[0m\n'
zsh -i
