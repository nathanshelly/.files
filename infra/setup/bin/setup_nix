#! /usr/bin/env bash

# shellcheck disable=SC1090,SC2016

# check that DOTFILES variable is defined
source "${BASH_SOURCE%/*}/../check_dotfiles_variable.sh"

source "$DOTFILES/infra/scripts/prompts.sh"

main() {
  local MAC_INSTALLATION_FLAGS

  # macOS (as of Catalina) makes the root (`/`) read-only
  # `nix` can workaround this by creating a "synthetic" directory at `/nix` and
  # mounting a separate volume which holds the actual contents
  # TODO: update docs/flesh out comments here
  # PR docs - https://dgn9s9wft3u6a.cloudfront.net/store/4iwvbj92fc10yyxla50an3vghajikwbl-manual/manual.html#sect-macos-installation
  "$DOTFILES/infra/scripts/is_macos.sh" && {
    MAC_INSTALLATION_FLAGS='--darwin-use-encrypted-nix-store-volume'
  }

  # `--daemon` enables multiuser install
  # on multiuser install no need to source `nix` activation script, done by
  # daemon?
  # TODO: explain why multiuser and differences w/ single-user install
  # https://nixos.org/nix/manual/#sect-multi-user-installation
  sh <(curl -L https://nixos.org/nix/install) \
    --daemon \
    "$MAC_INSTALLATION_FLAGS"

  command -v nix-env > /dev/null || {
    echo 'The `nix-env` binary is not available, installation may have errored.'
    exit 1
  }

  # ref - https://github.com/rycee/home-manager#installation
  # install home manager
  nix-channel --add \
    https://github.com/rycee/home-manager/archive/master.tar.gz \
    home-manager
  nix-channel --update

  # make home-manager available (also done on each shell load in zshrc)
  # ref - https://github.com/rycee/home-manager#installation
  export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH

  # install & create first generation
  nix-shell '<home-manager>' -A install

  # TODO: do I need to `home-manager switch` here?

  # symlink home config
  ln -s "$DOTFILES/nix/home.nix" "$HOME/.config/nixpkgs/home.nix"
}

main "$@"
