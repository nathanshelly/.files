#! /usr/bin/env bash

# This file sets up my needed language servers
# Using `coc.nvim` as my client as of 05/27/2019
# `coc.nvim` has various extensions which are based on VSCode extensions and
# can provide additional functionality on top of LSP (or use a different
# protocol entirely in the case of `coc-tsserver`, see note below)
#
# <<<< currently used languages >>>>
#
# << installation handled by coc.nvim extensions >>
#
# - python - `coc-python` - https://github.com/neoclide/coc-python
#   - requires a little setup - https://github.com/neoclide/coc-python#get-start
# - typescript - `coc-tsserver` - https://github.com/neoclide/coc-tsserver
#   - does not conform to LSP (same server used by VSCode though, Microsoft
#     forgoing it's own protocol for now, probably tech debt)
#     https://github.com/microsoft/language-server-protocol-inspector/issues/42#issuecomment-479995275
# - bash (& sh) - `coc-sh` - https://github.com/josa42/coc-sh - no config needed
#
# << installation in this file >>
#
# - rust - `rust-analyzer` (https://github.com/rust-analyzer/rust-analyzer)
# works well
#
# <<<< currently explicitly NOT used languages >>>>
#
# - ruby - https://github.com/castwide/solargraph is too flaky/times out to use

# rust - using `rust-analyzer`
# install rustup and then rust analyzer language server respectively if not
# already installed
#
# refs:
# - https://rustup.rs/
# - https://github.com/fannheyward/coc-rust-analyzer#quick-start
# - https://github.com/rust-analyzer/rust-analyzer#language-server-quick-start

# check that DOTFILES variable is defined
# shellcheck disable=SC1090
source "${BASH_SOURCE%/*}/../check_dotfiles_variable.sh"

TARGET="$DOTFILES/target"
command -v ra_lsp_server > /dev/null 2>&1 || {
  command -v rustup > /dev/null || {
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  }

  mkdir -p "$TARGET"
  git clone \
    https://github.com/rust-analyzer/rust-analyzer \
    "$TARGET/rust-analyzer"
  cd "$TARGET/rust-analyzer" || {
    # shellcheck disable=SC2016
    echo "Failed to install \`rust-analyzer\` in ${BASH_SOURCE[0]}"
    exit 1
  }

  # run from /tmp/rust-analyzer
  rustup component add rust-src
  cargo xtask install --server
}
unset TARGET
