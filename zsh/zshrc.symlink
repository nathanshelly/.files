# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# This zshrc sources files in $DOTFILES/zsh & any `.zsh` files in the directory
# specified by "$DOTFILES" (set to `$HOME/.files` in `./zshenv.symlink`)
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

# <<<< without dependencies >>>>
source "$DOTFILES/zsh/config.zsh"
source "$DOTFILES/zsh/path.zsh"

source "$DOTFILES/zsh/keymap.zsh"
source "$DOTFILES/zsh/options.zsh"
source "$DOTFILES/zsh/manydots.zsh"

# store tokens/keys in `secrets.zsh`, gitignored to avoid checking in
[ -f "$DOTFILES/zsh/secrets.zsh" ] && source "$DOTFILES/zsh/secrets.zsh"

# start autocomplete
# TODO: revisit caching here?
# ref - https://htr3n.github.io/2018/07/faster-zsh/#optimising-shell-prompts
autoload -Uz compinit
compinit -C

# <<<< dependencies >>>>

# make colors defined by spectrum available in other files
source "$DOTFILES/zsh/spectrum.zsh"

# << plugins >>
# source antibody - static (faster) method
# sources static file that must be regenerated any time a new plugin is added
# regenerate by running the following (aliased to `antibundle` in alias.zsh):
#   `antibody bundle < "$DOTFILES/zsh/plugins.txt" > "$DOTFILES/zsh/plugins.sh"`
# refs:
#   - https://getantibody.github.io/#static-loading
#   - https://github.com/getantibody/antibody
source "$DOTFILES/zsh/plugins.sh"

# functions grouped by topic (as opposed to miscellaneous functions defined in
# $DOTFILES/functions)
typeset -u topic_functions
topic_functions=($DOTFILES/**/functions/*(:t))
for function in $topic_functions
do
  autoload -Uz "$function"
done

# add topic_folder/functions to fpath to enable functions and completion scripts
typeset -u topic_functions_folders
topic_functions_folders=($DOTFILES/**/functions)
for topic_functions_folder in $topic_functions_folders
do
  fpath=("$topic_functions_folder" $fpath);
done

# <<<< after dependencies >>>>

# source plugins config after sourcing plugins themselves
source "$DOTFILES/zsh/plugins.zsh"
source "$DOTFILES/zsh/prompt.zsh"

# allow aliases to use defined functions
source "$DOTFILES/zsh/alias.zsh"

# define variable to store list of files to source
# note: -U ensures uniqueness
typeset -U config_files

# enable `extended_glob` to exclude directories (submodules, zsh) in match
# disable immediately after to respect options in `options.zsh`
# TODO: avoid `extended_glob` hack, exclude directories w/o `extended_glob` set
setopt extended_glob
config_files=($DOTFILES/**/*.zsh~*/zsh/*~*/submodules/*)
setopt noextended_glob

# zsh conveniently links path array and PATH env var
# to add to path, write `path=(<new-addition> $path)`
typeset -U path

typeset -U path_files
path_files=(${(M)config_files:#*/path.zsh})
for path_file in $path_files
do
  source "$path_file"
done

# load files that are not completion, path or functions
typeset -u all_other_files
all_other_files=(${${config_files:#*/path.zsh}:#*/completion.zsh})
for file in $all_other_files
do
  source "$file"
done
