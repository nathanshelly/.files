# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# Using Powerlevel10k - https://github.com/romkatv/powerlevel10k
#
# adapted from https://github.com/romkatv/powerlevel10k/blob/master/config/p10k-lean.zsh
# see the config there for more details on configuration options & other
# possible prompt elements
#
# see the Powerlevel9k docs for additional details as well
# ref - https://github.com/Powerlevel9k/powerlevel9k/blob/master/README.md
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

# Generated by Powerlevel10k configuration wizard on 2019-09-15 at 15:22 PDT.
# Based on romkatv/powerlevel10k/config/p10k-lean.zsh, checksum 31124.
# Wizard options: powerline, lean, 2 lines, disconnected, compact, concise.

if [[ -o 'aliases' ]]; then
  # temporarily disable aliases
  'builtin' 'unsetopt' 'aliases'
  local p10k_lean_restore_aliases=1
else
  local p10k_lean_restore_aliases=0
fi

() {
  emulate -L zsh
  setopt no_unset extended_glob
  zmodload zsh/langinfo
  if [[ ${langinfo[CODESET]:-} != (utf|UTF)(-|)8 ]]; then
    local LC_ALL=${${(@M)$(locale -a):#*.(utf|UTF)(-|)8}[1]:-en_US.UTF-8}
  fi

  # unset all other configuration options
  unset -m 'POWERLEVEL9K_*'

  typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< first line >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    dir          # current directory
    vcs          # git status
    # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<< second line >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    newline
    prompt_char  # prompt symbol
  )

  # Right prompt on the last prompt line (where you are typing your commands)
  # gets automatically hidden when the input line reaches it. Right prompt
  # above the last prompt line gets hidden if it would overlap with left prompt
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
    # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< first line >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    status                  # exit code of the last command
    command_execution_time  # duration of the last command
    background_jobs         # presence of background jobs
    virtualenv              # python virtual environment (https://docs.python.org/3/library/venv.html)
    context                 # user@host
    # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<< second line >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    newline
  )

  # <<<<<<<<<<<<<<<<<<<<<<<<<<< basic style options >>>>>>>>>>>>>>>>>>>>>>>>>>>

  # transparent background
  typeset -g POWERLEVEL9K_BACKGROUND=                            
  # no surrounding whitespace
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_{LEFT,RIGHT}_WHITESPACE=
  # separate segments with a space
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SUBSEGMENT_SEPARATOR=' '
  # no end-of-line symbol
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SEGMENT_SEPARATOR=

  # use default icons, requires capable nerdfonts, see POWERLEVEL9K_MODE below
  typeset -g POWERLEVEL9K_VISUAL_IDENTIFIER_EXPANSION='${P9K_VISUAL_IDENTIFIER}'

  # TODO: come back to this, maybe use different font?
  # This option makes a difference only when default icons are enabled for all
  # or some prompt segments (see POWERLEVEL9K_VISUAL_IDENTIFIER_EXPANSION
  # above). LOCK_ICON can be printed as $'\uE0A2', $'\uE138' or $'\uF023'
  # depending on POWERLEVEL9K_MODE. The correct value of this parameter depends
  # on the provider of the font your terminal is using.
  #
  #   Font Provider                    | POWERLEVEL9K_MODE
  #   ---------------------------------+-------------------
  #   Powerline                        | powerline
  #   Font Awesome                     | awesome-fontconfig
  #   Adobe Source Code Pro            | awesome-fontconfig
  #   Source Code Pro                  | awesome-fontconfig
  #   Awesome-Terminal Fonts (regular) | awesome-fontconfig
  #   Awesome-Terminal Fonts (patched) | awesome-patched
  #   Nerd Fonts                       | nerdfont-complete
  #   Other                            | compatible
  #
  # If this looks overwhelming, either stick with a preinstalled system font
  # and set POWERLEVEL9K_MODE=compatible, or install the recommended
  # Powerlevel10k font from
  # https://github.com/romkatv/powerlevel10k/#recommended-meslo-nerd-font-patched-for-powerlevel10k
  # and set POWERLEVEL9K_MODE=nerdfont-complete.
  typeset -g POWERLEVEL9K_MODE=powerline
  # display icons before content
  typeset -g POWERLEVEL9K_ICON_BEFORE_CONTENT=true
  # don't show a horizontal line above prompt
  typeset -g POWERLEVEL9K_SHOW_RULER=false
  # don't show a line between left & right prompts
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR=' '

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<< prompt symbol >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  typeset -g POWERLEVEL9K_PROMPT_CHAR_OK_{VIINS,VICMD,VIVIS}_FOREGROUND=093 # purple
  typeset -g POWERLEVEL9K_PROMPT_CHAR_ERROR_{VIINS,VICMD,VIVIS}_FOREGROUND=196 # red
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VIINS_CONTENT_EXPANSION='❯'
  typeset -g POWERLEVEL9K_PROMPT_CHAR_{OK,ERROR}_VICMD_CONTENT_EXPANSION='❮'

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<< current directory >>>>>>>>>>>>>>>>>>>>>>>>>>>>
  # TODO: maybe specify custom icon for directory? `projects` dir?
  # - https://github.com/romkatv/powerlevel10k/blob/master/config/p10k-lean.zsh#L253
  typeset -g POWERLEVEL9K_DIR_FOREGROUND=31 # light blue
  # If directory is too long, shorten some of its segments to the shortest
  # possible unique prefix. The shortened directory can be tab-completed to the
  # original
  typeset -g POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_unique
  # clear suffix for replaced segments (if removed the default suffix is *)
  typeset -g POWERLEVEL9K_SHORTEN_DELIMITER=
  # color of shortened directory segments
  typeset -g POWERLEVEL9K_DIR_SHORTENED_FOREGROUND=103 # light grey
  # color of anchor directory segments. Anchor segments are never shortened. The
  # first segment is always an anchor.
  typeset -g POWERLEVEL9K_DIR_ANCHOR_FOREGROUND=39 # bright blue
  # display anchor directory segments in bold
  typeset -g POWERLEVEL9K_DIR_ANCHOR_BOLD=true
  # don't shorten directories that contain any of these files
  local anchor_files=(
    .bzr
    .citc
    .git
    .hg
    .node-version
    .python-version
    .ruby-version
    .shorten_folder_marker
    .svn
    .terraform
    CVS
    Cargo.toml
    composer.json
    go.mod
    package.json
  )
  typeset -g POWERLEVEL9K_SHORTEN_FOLDER_MARKER="(${(j:|:)anchor_files})"
  # don't shorten this many last directory segments
  typeset -g POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
  # enable special styling for non-writable directories (shows a little lock)
  typeset -g POWERLEVEL9K_DIR_SHOW_WRITABLE=true

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< git >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  # git status format: feature:master#tag ⇣⇡ merge ~ ⊚⊚⊚
  #
  # VCS_STATUS parameters are set by gitstatus plugin
  # ref - https://github.com/romkatv/gitstatus/blob/master/gitstatus.plugin.zsh

  # show version control status only for git (adding `svn` or `hg` may slow down
  # prompt even when not in a corresponding repo)
  typeset -g POWERLEVEL9K_VCS_BACKENDS=(git)

  typeset -g POWERLEVEL9K_VCS_PREFIX='%244Fon ' # gray

  typeset -g POWERLEVEL9K_VCS_BRANCH_ICON=
  typeset -g POWERLEVEL9K_VCS_GIT_STATUS_ICON='⊚'
  local vcs=''
  # on a branch
  vcs+='${${VCS_STATUS_LOCAL_BRANCH:+%176F'${(g::)POWERLEVEL9K_VCS_BRANCH_ICON}
  # show full local branch name if less than 32 characters
  vcs+='${${${$(($#VCS_STATUS_LOCAL_BRANCH<=32)):#0}:+${VCS_STATUS_LOCAL_BRANCH//\%/%%}}'
  # truncate branch name at 32 characters to `first_12_chars...last_12_chars`
  # equivalent to setting POWERLEVEL9K_VCS_SHORTEN_LENGTH=12 and
  # POWERLEVEL9K_VCS_SHORTEN_STRATEGY=truncate_middle.
  vcs+=':-${VCS_STATUS_LOCAL_BRANCH[1,12]//\%/%%}%28F…%76F${VCS_STATUS_LOCAL_BRANCH[-12,-1]//\%/%%}}}'
  # '@<hash>' if not on a branch
  vcs+=':-%f@%76F${VCS_STATUS_COMMIT[1,8]}}'
  # ':<remote-tracking-branch>' if tracking branch differs from local branch
  vcs+='${${VCS_STATUS_REMOTE_BRANCH:#$VCS_STATUS_LOCAL_BRANCH}:+%f:%76F${VCS_STATUS_REMOTE_BRANCH//\%/%%}}'
  # '#<tag>' if on a tag
  vcs+='${VCS_STATUS_TAG:+%f#%76F${VCS_STATUS_TAG//\%/%%}}'
  # ⇣ if behind the remote
  vcs+='${${VCS_STATUS_COMMITS_BEHIND:#0}:+ %76F⇣}'
  # ⇡ if ahead of the remote; no leading space if also behind the remote: ⇣⇡
  vcs+='${${VCS_STATUS_COMMITS_AHEAD:#0}:+${${(M)VCS_STATUS_COMMITS_BEHIND:#0}:+ }%76F⇡}'
  # 'merge' if the repo is in an unusual state.
  vcs+='${VCS_STATUS_ACTION:+ %196F${VCS_STATUS_ACTION//\%/%%}}'
  # ~ if have merge conflicts.
  vcs+='${${VCS_STATUS_NUM_CONFLICTED:#0}:+ %196F~${VCS_STATUS_NUM_CONFLICTED}}'
  # add separator before staged/unstaged/tracked indicators
  vcs+=' '
  # light blue ⊚ for unstaged changes
  vcs+='${${VCS_STATUS_NUM_STAGED:#0}:+%087F'${(g::)POWERLEVEL9K_VCS_GIT_STATUS_ICON}'}'
  # hot pink ⊚ for unstaged changes
  vcs+='${${VCS_STATUS_NUM_UNSTAGED:#0}:+%200F'${(g::)POWERLEVEL9K_VCS_GIT_STATUS_ICON}'}'
  # blue ⊚ for staged changes
  vcs+='${${VCS_STATUS_NUM_UNTRACKED:#0}:+%033F'${(g::)POWERLEVEL9K_VCS_GIT_STATUS_ICON}'}'
  # if P9K_CONTENT is not empty, leave it unchanged. It's either "loading" or
  # from vcs_info.
  vcs="\${P9K_CONTENT:-$vcs}"

  # disable default git status formatting
  typeset -g POWERLEVEL9K_VCS_DISABLE_GITSTATUS_FORMATTING=true
  # use git status formatter defined above
  typeset -g POWERLEVEL9K_VCS_{CLEAN,UNTRACKED,MODIFIED}_CONTENT_EXPANSION=$vcs
  # while git status is being refreshed asynchronously, display last known repo
  # status in grey
  typeset -g POWERLEVEL9K_VCS_LOADING_CONTENT_EXPANSION=${${${vcs//\%f}//\%<->F}//\%F\{(\#|)[[:xdigit:]]#(\\|)\}}
  typeset -g POWERLEVEL9K_VCS_LOADING_FOREGROUND=244 # grey

  # these settings used for non-git respositories or when gitstatusd fails and
  # Powerlevel10k has to fall back to using vcs_info
  typeset -g POWERLEVEL9K_VCS_CLEAN_FOREGROUND=76 # green
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=76 # green
  typeset -g POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=178 # yellow

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< exit code >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  # show nothing on success or `1` error code since prompt_char conveys that
  typeset -g POWERLEVEL9K_STATUS_OK=false
  typeset -g POWERLEVEL9K_STATUS_ERROR=false

  # enable extended states (OK_PIPE, ERROR_PIPE and ERROR_SIGNAL) to stylize
  typeset -g POWERLEVEL9K_STATUS_EXTENDED_STATES=true

  # status when last command terminated by a signal
  typeset -g POWERLEVEL9K_STATUS_ERROR_SIGNAL=true
  typeset -g POWERLEVEL9K_STATUS_ERROR_SIGNAL_FOREGROUND=160 # red
  # use terse signal names: "INT" instead of "SIGINT(2)"
  typeset -g POWERLEVEL9K_STATUS_VERBOSE_SIGNAME=false
  typeset -g POWERLEVEL9K_STATUS_ERROR_SIGNAL_VISUAL_IDENTIFIER_EXPANSION=

  # pipe styling
  # shows exit code of each command w/ `<code>|...|<code>` format (e.g. `1|0|1`)
  typeset -g POWERLEVEL9K_STATUS_OK_PIPE=true
  typeset -g POWERLEVEL9K_STATUS_OK_PIPE_FOREGROUND=70 # green
  typeset -g POWERLEVEL9K_STATUS_OK_PIPE_VISUAL_IDENTIFIER_EXPANSION=

  typeset -g POWERLEVEL9K_STATUS_ERROR_PIPE=true
  typeset -g POWERLEVEL9K_STATUS_ERROR_PIPE_FOREGROUND=160 # red
  typeset -g POWERLEVEL9K_STATUS_ERROR_PIPE_VISUAL_IDENTIFIER_EXPANSION=

  # <<<<<<<<<<<<<<<<<<<<<<<<<< command execution time >>>>>>>>>>>>>>>>>>>>>>>>>>
  # only show when commands take >= this # of seconds
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=7
  # # of fractional digits, 0 rounds to nearest second
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=0
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=101 # light grey
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FORMAT='d h m s' # 1d 2h 3m 4s

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<< background jobs >>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  # show number of jobs
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_VERBOSE=true
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=70 # green
  # icon - ⚙
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_VISUAL_IDENTIFIER_EXPANSION='${P9K_VISUAL_IDENTIFIER}'

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<< username & host >>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  typeset -g POWERLEVEL9K_CONTEXT_FOREGROUND=180 # yellow
  # format (%n is username, %m is hostname)
  typeset -g POWERLEVEL9K_CONTEXT_TEMPLATE='%n@%m'
  # TODO: test this out
  typeset -g POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND=178 # yellow
  typeset -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE='%n@%m'

  # only show context when running with privileges or in SSH
  typeset -g POWERLEVEL9K_CONTEXT_{DEFAULT,SUDO}_{CONTENT,VISUAL_IDENTIFIER}_EXPANSION=

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< virtualenv >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  typeset -g POWERLEVEL9K_VIRTUALENV_FOREGROUND=37 # teal
  typeset -g POWERLEVEL9K_VIRTUALENV_SHOW_PYTHON_VERSION=true
  # separator between environment name & version
  typeset -g POWERLEVEL9K_VIRTUALENV_{LEFT,RIGHT}_DELIMITER=

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< node >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  typeset -g POWERLEVEL9K_NODE_VERSION_FOREGROUND=70 # light green
  # only show node version when any parent directory contains package.json
  typeset -g POWERLEVEL9K_NODE_VERSION_PROJECT_ONLY=true

  # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< rust >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  typeset -g POWERLEVEL9K_RUST_VERSION_FOREGROUND=37 # teal
  # only show node version when in a rust project subdirectory
  typeset -g POWERLEVEL9K_RUST_VERSION_PROJECT_ONLY=true
}

(( ! p10k_lean_restore_aliases )) || setopt aliases
'builtin' 'unset' 'p10k_lean_restore_aliases'
